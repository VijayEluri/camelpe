<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-4_0_0.xsd">
	<parent>
		<groupId>com.acme.orderplacement.jee.item</groupId>
		<artifactId>orderplacement.jee.item</artifactId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>../</relativePath>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.acme.orderplacement.jee.item</groupId>
	<artifactId>orderplacement.jee.item.ws</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>

	<name><![CDATA[SOA Order :: JEE :: Item :: Webservice]]></name>

	<dependencies>
		<!--
			| Provided dependencies 
		-->
		<!-- JAXB API -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!--
			JSR 181 Specification
		-->
		<dependency>
			<groupId>javax.jws</groupId>
			<artifactId>jsr181-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- JAX-WS API -->
		<dependency>
			<groupId>javax.xml.ws</groupId>
			<artifactId>jaxws-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!--
			HACK: We want this and only this module in WEB-INF/lib since it is
			used exclusively by this war. On the other hand, we want all other
			dependencies to be listed in this war's Class-Path element in
			MANIFEST.MF. This MANIFEST.MF will be generated by maven. To exclude
			this dependency from the generated Class-Path element, we have to
			artificially put it in scope 'provided'.
		-->
		<dependency>
			<groupId>com.acme.orderplacement.jee.item</groupId>
			<artifactId>orderplacement.jee.item.wsapi</artifactId>
			<scope>provided</scope>
		</dependency>
		<!--
			| Compile time dependencies 
		-->
		<dependency>
			<groupId>com.acme.orderplacement.framework</groupId>
			<artifactId>orderplacement.framework.service</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.acme.orderplacement.domain.item</groupId>
			<artifactId>orderplacement.domain.item.service</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.acme.orderplacement.jee.framework</groupId>
			<artifactId>orderplacement.jee.framework.common</artifactId>
			<scope>compile</scope>
		</dependency>
		<!--
			| Runtime dependencies 
		-->
		<!-- Not yet working -->
		<!--
			<dependency>
			<groupId>com.acme.orderplacement.jee.framework.wslog</groupId>
			<artifactId>orderplacement.jee.framework.wslog.handler</artifactId>
			<scope>runtime</scope> </dependency>
		-->
		<!--
			| Test dependencies 
		-->
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-wsapi-to-web-inf-lib</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<!--
									We need to explicitly copy this dependency into the WEB-INF/lib
									folder since the maven-war-plugin will ignore dependencies in
									'provided' scope (see above).
								-->
								<artifactItem>
									<groupId>com.acme.orderplacement.jee.item</groupId>
									<artifactId>orderplacement.jee.item.wsapi</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}/WEB-INF/lib
									</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!--
				Create a 'skinny' war suitable for being embedded into an ear: see
				http://maven.apache.org/plugins/maven-war-plugin/examples/skinny-wars.html
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<packagingIncludes>WEB-INF/lib/orderplacement.jee.item.wsapi-${project.version}.jar,WEB-INF/classes/**/*,META-INF/**/*
					</packagingIncludes>
					<archive>
						<index>true</index>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<addDefaultSpecificationEntries>true
							</addDefaultSpecificationEntries>
							<addDefaultImplementationEntries>true
							</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>