<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.acme.orderplacement</groupId>
	<artifactId>orderplacement.project</artifactId>
	<packaging>pom</packaging>
	<version>1.0-SNAPSHOT</version>
	<name><![CDATA[SOA Order]]></name>
	<url></url>
	<description><![CDATA[
]]>
	</description>

	<properties>
		<order.artifact.version>1.0-SNAPSHOT</order.artifact.version>
		<!--
			Make the build platform independent:
			http://maven.apache.org/general.html#encoding-warning
		-->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- 
			javac settings 
		-->
		<compiler.source>1.6</compiler.source>
		<compiler.target>1.6</compiler.target>
		<compiler.verbose>true</compiler.verbose>
		<compiler.debug>true</compiler.debug>
		<compiler.showWarnings>true</compiler.showWarnings>
		<compiler.showDeprecation>true</compiler.showDeprecation>
		<!--
			Geronimo settings. Note that geronimo.home should be overridden in
			your own ~/.m2/settings.xml.
		-->
		<geronimoVersion>2.2</geronimoVersion>
		<geronimo.home>
			C:/Java/Apps/GeronimoHome/geronimo-jetty7-javaee5-2.2
		</geronimo.home>
		<geronimo.moduleId.groupId>com.acme.orderplacement.jee
		</geronimo.moduleId.groupId>
		<geronimo.moduleId.artifactId>orderplacement.jee.ear
		</geronimo.moduleId.artifactId>
		<geronimo.moduleId.version>${project.version}
		</geronimo.moduleId.version>
		<geronimo.moduleId.type>ear</geronimo.moduleId.type>
		<!--
			Dependency versions 
		 -->
		<!-- Standard javax apis -->
		<deps.javax-inject.version>1</deps.javax-inject.version>
		<deps.cdi-api.version>1.0-SP1</deps.cdi-api.version>
		<deps.ejb-api.version>3.1.0</deps.ejb-api.version>
		<deps.interceptor-api.version>1.1</deps.interceptor-api.version>
		<deps.jta.version>1.1</deps.jta.version>
		<deps.jms.version>1.1</deps.jms.version>
		<deps.jsr250-api.version>1.0</deps.jsr250-api.version>
		<deps.jaxb-api.version>2.1</deps.jaxb-api.version>
		<deps.jaxb-impl.version>2.1.9</deps.jaxb-impl.version>
		<deps.servlet-api.version>2.5</deps.servlet-api.version>
		<deps.jsr181-api.version>1.0-MR1</deps.jsr181-api.version>
		<deps.jaxws-api.version>2.1-1</deps.jaxws-api.version>
		<deps.hibernate-jpa-2.0-api.version>1.0.0.Final
		</deps.hibernate-jpa-2.0-api.version>
		<deps.javaee-api.version>6.0</deps.javaee-api.version>
		<!-- Proprietary -->
		<deps.junit.version>4.8.1</deps.junit.version>
		<deps.arquillian.version>1.0.0.Alpha1</deps.arquillian.version>
		<deps.easymock.version>2.5.2</deps.easymock.version>
		<deps.slf4j.version>1.5.11</deps.slf4j.version>
		<deps.log4j.version>1.2.15</deps.log4j.version>
		<deps.aspectj.version>1.6.8</deps.aspectj.version>
		<deps.spring.version>3.0.2.RELEASE</deps.spring.version>
		<deps.hibernate.version>3.5.0-Final</deps.hibernate.version>
		<deps.validation-api.version>1.0.0.GA</deps.validation-api.version>
		<!--
			We use Hibernate Validator 4.1.0.Beta1 because its pom correctly
			registers the dependencies on jaxb in scope 'provided' instead of
			'runtime'.
		-->
		<deps.hibernate-validator.version>4.1.0.Beta1
		</deps.hibernate-validator.version>
		<deps.hibernate-tools.version>3.2.4.GA</deps.hibernate-tools.version>
		<deps.camel.version>2.2.0</deps.camel.version>
		<deps.camel-activemq.version>1.1.0</deps.camel-activemq.version>
		<deps.activemq-camel.version>5.3.1</deps.activemq-camel.version>
		<deps.geronimo.version>2.2</deps.geronimo.version>
		<deps.h2.version>1.2.134</deps.h2.version>
		<deps.xbean-naming.version>3.6</deps.xbean-naming.version>
		<!--
			Plugin versions 
		 -->
		<plugins.compiler.version>2.2</plugins.compiler.version>
		<plugins.clean.version>2.4</plugins.clean.version>
		<plugins.deploy.version>2.5</plugins.deploy.version>
		<plugins.install.version>2.3</plugins.install.version>
		<plugins.resources.version>2.4.2</plugins.resources.version>
		<plugins.surefire.version>2.5</plugins.surefire.version>
		<plugins.ear.version>2.4.1</plugins.ear.version>
		<plugins.ejb.version>2.2.1</plugins.ejb.version>
		<plugins.jar.version>2.3</plugins.jar.version>
		<plugins.war.version>2.1-beta-1</plugins.war.version>
		<plugins.antrun.version>1.3</plugins.antrun.version>
		<plugins.dependency.version>2.1</plugins.dependency.version>
		<plugins.plugin.version>2.5.1</plugins.plugin.version>
		<plugins.site.version>2.1</plugins.site.version>
		<plugins.source.version>2.1.1</plugins.source.version>
		<plugins.cobertura.version>2.3</plugins.cobertura.version>
		<plugins.jaxb2.version>0.7.3</plugins.jaxb2.version>
		<plugins.jaxws.version>1.12</plugins.jaxws.version>
		<plugins.bundle.version>2.0.1</plugins.bundle.version>
		<plugins.geronimo.version>2.0.2</plugins.geronimo.version>
		<plugins.geronimo-car.version>2.2</plugins.geronimo-car.version>
	</properties>

	<organization>
		<name>Saxonia Systems AG</name>
		<url>http://www.saxsys.de</url>
	</organization>

	<developers>
		<developer>
			<id>obergner</id>
			<name>Olaf Bergner</name>
			<email>olaf.bergner at saxsys.de</email>
			<organization>Saxonia Systems AG</organization>
			<organizationUrl>http://www.saxsys.de
			</organizationUrl>
			<roles>
				<role>Project Admin</role>
				<role>Developer</role>
			</roles>
			<timezone>0</timezone>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0
			</url>
			<comments>
				Copyright 2006-2007 the original author or authors.

				Licensed under the Apache License, Version 2.0 (the
				"License"); you
				may not use this file except in
				compliance with the License. You may
				obtain a copy of
				the License at

				http://www.apache.org/licenses/LICENSE-2.0

				Unless required by
				applicable law or agreed to in
				writing, software distributed under
				the License is
				distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
				CONDITIONS OF ANY KIND, either express or implied. See
				the License
				for the specific language governing
				permissions and limitations under
				the License.
			</comments>
		</license>
	</licenses>

	<!-- =================================================== -->
	<!-- SCM section                                         -->
	<!-- =================================================== -->

	<scm>
		<connection>
			scm:svn:svn://localhost/osgira/trunk/project
		</connection>
		<developerConnection>
			scm:svn:svn://localhost/osgiara/trunk/project
		</developerConnection>
		<tag>HEAD</tag>
		<url>http://localhost:8001/osgira/browser/trunk
		</url>
	</scm>

	<!-- =================================================== -->
	<!-- Distribution management                             -->
	<!-- =================================================== -->

	<distributionManagement>
		<site>
			<id>com.acme.orderplacement.website
			</id>
			<url>https://dav.sample.com/sites/sample-project
			</url>
		</site>
		<repository>
			<id>com.obergner.localDistributionRepository
			</id>
			<name>My Very Own Local Distribution Repository</name>
			<url>file:/E:/Var/Data/Maven2/Repository/
			</url>
		</repository>
	</distributionManagement>

	<!-- =================================================== -->
	<!-- Project Dependencies                                -->
	<!-- =================================================== -->

	<dependencyManagement>
		<dependencies>
			<!-- =========================================== -->
			<!-- Application modules                         -->
			<!-- =========================================== -->
			<dependency>
				<groupId>com.acme.orderplacement.framework</groupId>
				<artifactId>orderplacement.framework</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.framework</groupId>
				<artifactId>orderplacement.framework.common</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.framework</groupId>
				<artifactId>orderplacement.framework.aspect</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.framework</groupId>
				<artifactId>orderplacement.framework.testsupport</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.framework</groupId>
				<artifactId>orderplacement.framework.domain</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.framework</groupId>
				<artifactId>orderplacement.framework.persistence.config</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.framework</groupId>
				<artifactId>orderplacement.framework.persistence.common</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.framework</groupId>
				<artifactId>orderplacement.framework.persistence.testsupport
				</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.framework</groupId>
				<artifactId>orderplacement.framework.service</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.framework</groupId>
				<artifactId>orderplacement.framework.wslog</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.domain</groupId>
				<artifactId>orderplacement.domain</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.domain.item</groupId>
				<artifactId>orderplacement.domain.item</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.domain.item</groupId>
				<artifactId>orderplacement.domain.item.entities</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.domain.item</groupId>
				<artifactId>orderplacement.domain.item.service</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.integration</groupId>
				<artifactId>orderplacement.integration</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.integration</groupId>
				<artifactId>orderplacement.integration.inbound</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.integration</groupId>
				<artifactId>orderplacement.integration.inbound.external</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.jee</groupId>
				<artifactId>orderplacement.jee</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.jee.framework</groupId>
				<artifactId>orderplacement.jee.framework</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.jee.framework</groupId>
				<artifactId>orderplacement.jee.framework.common</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.jee.framework</groupId>
				<artifactId>orderplacement.jee.framework.geronimo</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.jee.framework</groupId>
				<artifactId>orderplacement.jee.framework.config</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.jee.framework.wslog</groupId>
				<artifactId>orderplacement.jee.framework.wslog</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.jee.framework.wslog</groupId>
				<artifactId>orderplacement.jee.framework.wslog.handler</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.jee.item</groupId>
				<artifactId>orderplacement.jee.item</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.jee.item</groupId>
				<artifactId>orderplacement.jee.item.persistence</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.jee.item</groupId>
				<artifactId>orderplacement.jee.item.service</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.jee.item</groupId>
				<artifactId>orderplacement.jee.item.ejb</artifactId>
				<version>${project.version}</version>
				<type>ejb</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.jee.item</groupId>
				<artifactId>orderplacement.jee.item.itemimport</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.jee.item</groupId>
				<artifactId>orderplacement.jee.item.mdb</artifactId>
				<version>${project.version}</version>
				<type>ejb</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.jee.item</groupId>
				<artifactId>orderplacement.jee.item.wsapi</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.jee.item</groupId>
				<artifactId>orderplacement.jee.item.ws</artifactId>
				<version>${project.version}</version>
				<type>war</type>
			</dependency>
			<dependency>
				<groupId>com.acme.orderplacement.jee</groupId>
				<artifactId>orderplacement.jee.ear</artifactId>
				<version>${project.version}</version>
				<type>ear</type>
			</dependency>
			<!-- =========================================== -->
			<!-- Standard Javax APIs                         -->
			<!-- =========================================== -->
			<!-- JSR 330: @Inject etc -->
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>${deps.javax-inject.version}</version>
				<type>jar</type>
			</dependency>
			<!-- JSR 250 Annotations: @Resource etc -->
			<dependency>
				<groupId>javax.annotation</groupId>
				<artifactId>jsr250-api</artifactId>
				<version>${deps.jsr250-api.version}</version>
				<type>jar</type>
			</dependency>
			<!-- JSR 299/CDI etc -->
			<dependency>
				<groupId>javax.enterprise</groupId>
				<artifactId>cdi-api</artifactId>
				<version>${deps.cdi-api.version}</version>
				<type>jar</type>
			</dependency>
			<!-- EJB 3.1 API - TODO: Replace with standard javax.ejb -->
			<dependency>
				<groupId>org.jboss.ejb3</groupId>
				<artifactId>jboss-ejb3-api</artifactId>
				<version>${deps.ejb-api.version}</version>
				<type>jar</type>
				<exclusions>
					<exclusion>
						<artifactId>jboss-jaxrpc</artifactId>
						<groupId>jbossws</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jboss-transaction-api</artifactId>
						<groupId>org.jboss.javaee</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jboss-jaxrpc</artifactId>
						<groupId>jboss.jbossws</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<!--
				Javax Interceptor API - TODO: Replace with standard
				javax.interceptor
			-->
			<dependency>
				<groupId>org.jboss.interceptor</groupId>
				<artifactId>jboss-interceptor-api</artifactId>
				<version>${deps.interceptor-api.version}</version>
				<type>jar</type>
			</dependency>
			<!-- Javax Transaction API -->
			<dependency>
				<groupId>javax.transaction</groupId>
				<artifactId>jta</artifactId>
				<version>${deps.jta.version}</version>
				<type>jar</type>
			</dependency>
			<!-- Javax JMS API -->
			<dependency>
				<groupId>javax.jms</groupId>
				<artifactId>jms</artifactId>
				<version>${deps.jms.version}</version>
				<type>jar</type>
			</dependency>
			<!-- Javax Persistence API -->
			<dependency>
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.0-api</artifactId>
				<version>${deps.hibernate-jpa-2.0-api.version}</version>
				<type>jar</type>
			</dependency>
			<!-- JAXB API -->
			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>${deps.jaxb-api.version}</version>
				<type>jar</type>
			</dependency>
			<!-- JSR 181 API: Annotations for Webservices -->
			<dependency>
				<groupId>javax.jws</groupId>
				<artifactId>jsr181-api</artifactId>
				<version>${deps.jsr181-api.version}</version>
				<type>jar</type>
			</dependency>
			<!-- JAX-WS API -->
			<dependency>
				<groupId>javax.xml.ws</groupId>
				<artifactId>jaxws-api</artifactId>
				<version>${deps.jaxws-api.version}</version>
				<type>jar</type>
				<exclusions>
					<!--
						We want to use the jsr181-api version from above.
					-->
					<exclusion>
						<groupId>javax.jws</groupId>
						<artifactId>jsr181</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- Servlet API -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${deps.servlet-api.version}</version>
				<type>jar</type>
			</dependency>
			<!-- Bean Validation API -->
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${deps.validation-api.version}</version>
				<type>jar</type>
			</dependency>
			<!-- J2EE Management Specification -->
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-j2ee-management_1.1_spec</artifactId>
				<version>1.0.1</version>
				<type>jar</type>
			</dependency>
			<!-- JEE 6 API -->
			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-api</artifactId>
				<version>${deps.javaee-api.version}</version>
				<type>jar</type>
			</dependency>
			<!-- =========================================== -->
			<!-- Implementations of standard javax APIs      -->
			<!-- =========================================== -->
			<!-- JAXB2 RI Implementation (SUN) -->
			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-impl</artifactId>
				<version>${deps.jaxb-impl.version}</version>
				<type>jar</type>
			</dependency>
			<!-- Hibernate Bean Validation Implementation -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${deps.hibernate-validator.version}</version>
				<type>jar</type>
				<exclusions>
					<!--
						We want slf4j in 'provided' scope since it is one of the libraries
						that are shared between different JEE modules in our final war. If
						we wouldn't exclude it here, it would end up in scope 'runtime'
						and thus would be automatically included in every JEE module we
						build, not only in the final ear.
					-->
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- CDI extensions -->
			<dependency>
				<groupId>org.jboss.weld</groupId>
				<artifactId>weld-logger</artifactId>
				<version>1.0.0-CR2</version>
				<type>jar</type>
			</dependency>
			<!-- Hibernate Bean Validation Implementation -->
			<!-- =========================================== -->
			<!-- Proprietary                                 -->
			<!-- =========================================== -->
			<!-- Apache -->
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.3</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>3.2</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.3</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>1.1</version>
				<type>jar</type>
				<exclusions>
					<exclusion>
						<groupId>javax.servlet</groupId>
						<artifactId>servlet-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>logkit</groupId>
						<artifactId>logkit</artifactId>
					</exclusion>
					<exclusion>
						<groupId>avalon-framework</groupId>
						<artifactId>avalon-framework</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>commons-pool</groupId>
				<artifactId>commons-pool</artifactId>
				<version>1.4</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>commons-net</groupId>
				<artifactId>commons-net</artifactId>
				<version>2.0</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${deps.log4j.version}</version>
				<type>jar</type>
				<exclusions>
					<exclusion>
						<groupId>javax.jms</groupId>
						<artifactId>jms</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.mail</groupId>
						<artifactId>mail</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.activation</groupId>
						<artifactId>activation</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jdmk</groupId>
						<artifactId>jmxtools</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jmx</groupId>
						<artifactId>jmxri</artifactId>
					</exclusion>
					<exclusion>
						<groupId>logkit</groupId>
						<artifactId>logkit</artifactId>
					</exclusion>
					<exclusion>
						<groupId>avalon-framework</groupId>
						<artifactId>avalon-framework</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.fusesource.commonman</groupId>
				<artifactId>commons-management</artifactId>
				<version>1.0</version>
				<type>jar</type>
			</dependency>
			<!-- AspectJ -->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${deps.aspectj.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${deps.aspectj.version}</version>
				<type>jar</type>
			</dependency>
			<!-- Spring -->
			<dependency>
				<groupId>aopalliance</groupId>
				<artifactId>aopalliance</artifactId>
				<version>1.0</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jms</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-oxm</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-asm</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
			</dependency>
			<!-- 
				Apache Camel 
			-->
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-core</artifactId>
				<version>${deps.camel.version}</version>
				<type>jar</type>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jaxb</artifactId>
				<version>${deps.camel.version}</version>
				<type>jar</type>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jms</artifactId>
				<version>${deps.camel.version}</version>
				<type>jar</type>
				<exclusions>
					<!--
						We use the standard javax.jms-1.1 
					 -->
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-jms_1.1_spec</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-spring</artifactId>
				<version>${deps.camel.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-test</artifactId>
				<version>${deps.camel.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-activemq</artifactId>
				<version>${deps.camel-activemq.version}</version>
				<type>jar</type>
			</dependency>
			<!-- 
				Apache Camel+ActiveMQ integration 
			-->
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-camel</artifactId>
				<version>${deps.activemq-camel.version}</version>
				<type>jar</type>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging-api</artifactId>
					</exclusion>
					<!--
						We use the standard javax.jms-1.1 
					 -->
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-jms_1.1_spec</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!--
				Explicitily list these dependencies in order to be able to exclude
				commons-logging
			-->
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-core</artifactId>
				<version>${deps.activemq-camel.version}</version>
				<type>jar</type>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging-api</artifactId>
					</exclusion>
					<!--
						activeio-core uses geronimo-j2ee-management_1.1_spec
					-->
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-j2ee-management_1.0_spec</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.osgi</groupId>
						<artifactId>org.osgi.core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework.osgi</groupId>
						<artifactId>spring-osgi-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-pool</artifactId>
				<version>${deps.activemq-camel.version}</version>
				<type>jar</type>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging-api</artifactId>
					</exclusion>
					<!--
						We use the standard javax.jta-1.1 
					 -->
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-jta_1.0.1B_spec</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq.protobuf</groupId>
				<artifactId>activemq-protobuf</artifactId>
				<version>1.0</version>
				<type>jar</type>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging-api</artifactId>
					</exclusion>
					<!--
						We use the standard javax.jta-1.1 
					 -->
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-jta_1.0.1B_spec</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activeio-core</artifactId>
				<version>3.1.2</version>
				<type>jar</type>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<!--
						Will be provided by the JEE container and is not needed during
						tests
					-->
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-j2ee-management_1.1_spec</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>kahadb</artifactId>
				<version>5.3.1</version>
				<type>jar</type>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- CGLIB -->
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib-nodep</artifactId>
				<version>2.2</version>
				<type>jar</type>
			</dependency>
			<!-- Google -->
			<dependency>
				<groupId>com.google.code.google-collections
				</groupId>
				<artifactId>google-collect</artifactId>
				<version>snapshot-20080530</version>
				<type>jar</type>
			</dependency>
			<!-- Hibernate -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-annotations</artifactId>
				<version>${deps.hibernate.version}</version>
				<type>jar</type>
				<exclusions>
					<!--
						We want slf4j in 'provided' scope since it is one of the libraries
						that are shared between different JEE modules in our final war. If
						we wouldn't exclude it here, it would end up in scope 'runtime'
						and thus would be automatically included in every JEE module we
						build, not only in the final ear.
					-->
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${deps.hibernate.version}</version>
				<type>jar</type>
				<exclusions>
					<!--
						We want slf4j in 'provided' scope since it is one of the libraries
						that are shared between different JEE modules in our final war. If
						we wouldn't exclude it here, it would end up in scope 'runtime'
						and thus would be automatically included in every JEE module we
						build, not only in the final ear.
					-->
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>cglib</groupId>
						<artifactId>cglib</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${deps.hibernate.version}</version>
				<type>jar</type>
				<exclusions>
					<!--
						We want these dependencies in 'provided' scope since they count
						among those libraries that are shared between different JEE
						modules in our final ear. If we wouldn't exclude them here, they
						would end up in scope 'runtime' and thus would be automatically
						included in every JEE module we build, not only in the final ear.
					-->
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-collections</groupId>
						<artifactId>commons-collections</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.transaction</groupId>
						<artifactId>jta</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-tools</artifactId>
				<version>${deps.hibernate-tools.version}</version>
			</dependency>
			<dependency>
				<groupId>antlr</groupId>
				<artifactId>antlr</artifactId>
				<version>2.7.6</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>dom4j</groupId>
				<artifactId>dom4j</artifactId>
				<version>1.6.1</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>3.9.0.GA</version>
				<type>jar</type>
			</dependency>
			<!-- SLF4J -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${deps.slf4j.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${deps.slf4j.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${deps.slf4j.version}</version>
				<type>jar</type>
			</dependency>
			<!-- Tranql: PostgreSQL XA Connector -->
			<dependency>
				<groupId>org.tranql</groupId>
				<artifactId>tranql-connector-postgresql-xa</artifactId>
				<version>1.2</version>
				<type>rar</type>
			</dependency>
			<!-- Geronimo -->
			<dependency>
				<groupId>org.apache.geronimo.framework</groupId>
				<artifactId>geronimo-kernel</artifactId>
				<version>${deps.geronimo.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.framework</groupId>
				<artifactId>geronimo-naming</artifactId>
				<version>${deps.geronimo.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.framework</groupId>
				<artifactId>geronimo-security</artifactId>
				<version>${deps.geronimo.version}</version>
				<type>jar</type>
			</dependency>
			<!-- =========================================== -->
			<!-- Test dependencies                           -->
			<!-- =========================================== -->
			<!-- JUnit -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${deps.junit.version}</version>
				<type>jar</type>
			</dependency>
			<!-- Arquillian: Test framework for CDI, Glassfish, JBoss -->
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-junit</artifactId>
				<version>${deps.arquillian.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.container</groupId>
				<artifactId>arquillian-weld-embedded</artifactId>
				<version>${deps.arquillian.version}</version>
				<type>jar</type>
				<exclusions>
					<!--
						We don't use jdk14 logging. If we wouldn't exclude it here SLF4J
						would keep complaining about finding to bindings - one for log4j
						and one for jdk14 - when running test cases.
					-->
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-jdk14</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- Easymock -->
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>${deps.easymock.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymockclassextension</artifactId>
				<version>${deps.easymock.version}</version>
				<type>jar</type>
			</dependency>
			<!-- Spring-Test -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${deps.h2.version}</version>
				<type>jar</type>
			</dependency>
			<!-- We need a JNDI implementation for testing purposes -->
			<dependency>
				<groupId>org.apache.xbean</groupId>
				<artifactId>xbean-naming</artifactId>
				<version>${deps.xbean-naming.version}</version>
				<type>jar</type>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- shared dependencies across modules -->
	<dependencies>
		<!-- =========================================== -->
		<!-- Provided                                    -->
		<!-- =========================================== -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- =========================================== -->
		<!-- Compile                                     -->
		<!-- =========================================== -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<scope>compile</scope>
		</dependency>
		<!-- =========================================== -->
		<!-- Runtime                                     -->
		<!-- =========================================== -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- =========================================== -->
		<!-- Test                                        -->
		<!-- =========================================== -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian</groupId>
			<artifactId>arquillian-junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.container</groupId>
			<artifactId>arquillian-weld-embedded</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymockclassextension</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- =================================================== -->
	<!-- Project Plugins                                     -->
	<!-- =================================================== -->

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${plugins.clean.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin
					</artifactId>
					<version>${plugins.resources.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${plugins.compiler.version}</version>
					<configuration>
						<source>${compiler.source}</source>
						<target>${compiler.target}</target>
						<verbose>${compiler.verbose}</verbose>
						<debug>${compiler.debug}</debug>
						<showWarnings>
							${compiler.showWarnings}
						</showWarnings>
						<showDeprecation>
							${compiler.showDeprecation}
						</showDeprecation>
					</configuration>
				</plugin>
				<plugin>
					<!--
						| Because of a bug that sometimes causes wrong classpath ordering,
						| we have to use a maven-surefire-plugin version >= 2.3.1. | See |
						SUREFIRE-61
					-->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${plugins.surefire.version}</version>
					<!-- Don't for VM in order to be able to debug test cases -->
					<configuration>
						<forkMode>never</forkMode>
						<!-- forkMode>perTest</forkMode -->
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin
                    </artifactId>
					<version>${plugins.antrun.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin
					</artifactId>
					<version>${plugins.cobertura.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>${plugins.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${plugins.jar.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${plugins.source.version}</version>
					<executions>
						<execution>
							<id>create-source-jar</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
						<execution>
							<id>create-test-source-jar</id>
							<phase>package</phase>
							<goals>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin
					</artifactId>
					<version>${plugins.dependency.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>${plugins.bundle.version}</version>
					<extensions>true</extensions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${plugins.install.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${plugins.deploy.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${plugins.site.version}</version>
					<executions>
						<execution>
							<id>jar</id>
							<phase>site</phase>
							<goals>
								<goal>jar</goal>
							</goals>
							<configuration>
								<jarOutputDirectory>
									${project.reporting.outputDirectory}
								</jarOutputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ear-plugin</artifactId>
					<version>${plugins.ear.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${plugins.war.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ejb-plugin</artifactId>
					<version>${plugins.ejb.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jaxws-maven-plugin</artifactId>
					<version>${plugins.jaxws.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.geronimo.plugins
					</groupId>
					<artifactId>geronimo-maven-plugin
					</artifactId>
					<version>${plugins.geronimo.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.geronimo.buildsupport</groupId>
					<artifactId>car-maven-plugin</artifactId>
					<version>${plugins.geronimo-car.version}</version>
				</plugin>
				<plugin>
					<groupId>org.jvnet.jaxb2.maven2</groupId>
					<artifactId>maven-jaxb2-plugin</artifactId>
					<version>${plugins.jaxb2.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin
				</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin
				</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin
				</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-ear-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-ejb-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxws-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.geronimo.plugins
				</groupId>
				<artifactId>geronimo-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jvnet.jaxb2.maven2</groupId>
				<artifactId>maven-jaxb2-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.geronimo.buildsupport</groupId>
				<artifactId>car-maven-plugin</artifactId>
				<extensions>true</extensions>
			</plugin>
		</plugins>
	</build>

	<!-- =================================================== -->
	<!-- Project Profiles                                    -->
	<!-- =================================================== -->

	<profiles>
		<profile>
			<id>standalone</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<modules>
				<module>../framework</module>
				<module>../domain</module>
				<module>../integration</module>
				<module>../jee</module>
			</modules>
		</profile>
	</profiles>

	<!-- =================================================== -->
	<!-- Project Reporting                                   -->
	<!-- =================================================== -->

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin
				</artifactId>
				<version>2.4.3</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin
				</artifactId>
				<version>2.2</version>
				<configuration>
					<aggregate>true</aggregate>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<aggregate>true</aggregate>
					<targetJdk>${compiler.source}</targetJdk>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>
					maven-project-info-reports-plugin
				</artifactId>
				<version>2.0.1</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>dependencies</report>
							<report>project-team</report>
							<report>mailing-list</report>
							<report>cim</report>
							<!--
								Issue tracking report will be omitted
								<report>issue-tracking</report>
							-->
							<report>license</report>
							<report>scm</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<!--
				| The dashboard plugin has to be the LAST in this list
			-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>dashboard-maven-plugin
				</artifactId>
				<version>1.0-SNAPSHOT</version>
			</plugin>
		</plugins>
	</reporting>

	<!-- =================================================== -->
	<!-- Project Repositories                                -->
	<!-- =================================================== -->

	<repositories>
		<!--
			The JBoss repository provides the EJB 3.0 API jar. 
		-->
		<repository>
			<id>org.jboss.releaseRepository</id>
			<name>JBoss Releases Repository</name>
			<url>http://repository.jboss.com/maven2</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<!--
			The following two repositories are needed for the JAXB2 Maven2
			Pluging: https://maven-jaxb2-plugin.dev.java.net/docs/guide.html
		-->
		<repository>
			<id>dev.java.net.maven2Repository</id>
			<name>Java.net Maven 2 Repository</name>
			<url>http://download.java.net/maven/2</url>
		</repository>
		<repository>
			<id>dev.java.net.maven1Repository</id>
			<name>Java.net Maven 1 Repository (legacy)</name>
			<url>http://download.java.net/maven/1</url>
			<layout>legacy</layout>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>org.apache.snapshotsRepository</id>
			<name>Apache Snapshots Repository</name>
			<url>http://cvs.apache.org/maven-snapshot-repository
			</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<!--
			| Needed for the Codehaus dashboard plugin 
		-->
		<pluginRepository>
			<id>org.codehaus.snapshotsRepository
			</id>
			<name>Codehaus Snapshots Repository</name>
			<url>http://snapshots.repository.codehaus.org/
			</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<!--
			The following two repositories are needed for the JAXB2 Maven2
			Pluging: https://maven-jaxb2-plugin.dev.java.net/docs/guide.html
		-->
		<pluginRepository>
			<id>dev.java.net.maven2Repository</id>
			<name>Java.net Maven 2 Repository</name>
			<url>http://download.java.net/maven/2
			</url>
		</pluginRepository>
		<pluginRepository>
			<id>dev.java.net.maven1Repository</id>
			<name>Java.net Maven 1 Repository (legacy)</name>
			<url>http://download.java.net/maven/1
			</url>
			<layout>legacy</layout>
		</pluginRepository>
		<!--
			Needed for hibernate-tools
		-->
		<pluginRepository>
			<id>org.jboss.releaseRepository</id>
			<name>JBoss Releases Repository</name>
			<url>http://repository.jboss.com/maven2
			</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

</project>
