<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>net.camelpe</groupId>
	<artifactId>project</artifactId>
	<packaging>pom</packaging>
	<version>0.1-SNAPSHOT</version>
	<name><![CDATA[Camel PE]]></name>
	<url></url>
	<description><![CDATA[Camel PE - A CDI portable extension for Apache Camel]]>
	</description>



	<properties>
		<order.artifact.version>0.1-SNAPSHOT</order.artifact.version>
		<!-- Make the build platform independent: http://maven.apache.org/general.html#encoding-warning -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- javac settings -->
		<compiler.source>1.6</compiler.source>
		<compiler.target>1.6</compiler.target>
		<compiler.verbose>true</compiler.verbose>
		<compiler.debug>true</compiler.debug>
		<compiler.showWarnings>true</compiler.showWarnings>
		<compiler.showDeprecation>true</compiler.showDeprecation>
		<!-- Dependency versions -->
		<!-- Standard javax apis -->
		<deps.javax-inject.version>1</deps.javax-inject.version>
		<deps.cdi-api.version>1.0-SP2</deps.cdi-api.version>
		<deps.ejb-api.version>3.1.0</deps.ejb-api.version>
		<deps.interceptor-api.version>1.1</deps.interceptor-api.version>
		<deps.jta.version>1.1</deps.jta.version>
		<deps.jms.version>1.1</deps.jms.version>
		<deps.jsr250-api.version>1.0</deps.jsr250-api.version>
		<deps.servlet-api.version>2.5</deps.servlet-api.version>
		<!-- Proprietary -->
		<deps.slf4j.version>1.5.11</deps.slf4j.version>
		<deps.log4j.version>1.2.16</deps.log4j.version>
		<deps.spring.version>3.0.2.RELEASE</deps.spring.version>
		<deps.validation-api.version>1.0.0.GA</deps.validation-api.version>
		<deps.jsf-api.version>2.0.2-FCS</deps.jsf-api.version>
		<deps.el-api.version>2.2</deps.el-api.version>
		<!-- We use Hibernate Validator 4.1.0.Final because its pom correctly registers 
			the dependencies on jaxb in scope 'provided' instead of 'runtime'. -->
		<deps.hibernate-validator.version>4.1.0.Final
		</deps.hibernate-validator.version>
		<deps.jsf-ri.version>2.0.2-FCS</deps.jsf-ri.version>
		<deps.weld.version>1.1.0.Beta1</deps.weld.version>
		<deps.camel.version>2.4.0</deps.camel.version>
		<deps.hornetq.version>2.1.2.Final</deps.hornetq.version>
		<deps.netty.version>3.2.1.Final</deps.netty.version>
		<deps.osgi.version>4.1.0</deps.osgi.version>
		<deps.google-guava.version>r06</deps.google-guava.version>
		<deps.jboss-as.version>6.0.0.M1</deps.jboss-as.version>
		<deps.jboss-vfs.version>3.0.0.CR5</deps.jboss-vfs.version>
		<!-- Testing -->
		<deps.junit.version>4.8.1</deps.junit.version>
		<deps.arquillian.version>1.0.0.Alpha4</deps.arquillian.version>
		<deps.easymock.version>2.5.2</deps.easymock.version>
		<!-- Plugin versions -->
		<plugins.compiler.version>2.3.2</plugins.compiler.version>
		<plugins.clean.version>2.4.1</plugins.clean.version>
		<plugins.deploy.version>2.5</plugins.deploy.version>
		<plugins.install.version>2.3.1</plugins.install.version>
		<plugins.resources.version>2.4.3</plugins.resources.version>
		<plugins.surefire.version>2.6</plugins.surefire.version>
		<plugins.jar.version>2.3.1</plugins.jar.version>
		<plugins.dependency.version>2.1</plugins.dependency.version>
		<plugins.plugin.version>2.5.1</plugins.plugin.version>
		<plugins.source.version>2.1.1</plugins.source.version>
		<plugins.cobertura.version>2.3</plugins.cobertura.version>
		<plugins.build-helper.version>1.5</plugins.build-helper.version>
	</properties>

	<developers>
		<developer>
			<id>obergner</id>
			<name>Olaf Bergner</name>
			<email>olaf.bergner at saxsys.de</email>
			<organization>Saxonia Systems AG</organization>
			<organizationUrl>http://www.saxsys.de
			</organizationUrl>
			<roles>
				<role>Project Admin</role>
				<role>Developer</role>
			</roles>
			<timezone>0</timezone>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0
			</url>
			<comments>
				Copyright 2006-2007 the original author or authors.

				Licensed under the Apache License, Version 2.0 (the
				"License"); you
				may not use this file except in
				compliance with the License. You may
				obtain a copy of
				the License at

				http://www.apache.org/licenses/LICENSE-2.0

				Unless required by
				applicable law or agreed to in
				writing, software distributed under
				the License is
				distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
				CONDITIONS OF ANY KIND, either express or implied. See
				the License
				for the specific language governing
				permissions and limitations under
				the License.
			</comments>
		</license>
	</licenses>

	<!-- =================================================== -->
	<!-- SCM section -->
	<!-- =================================================== -->

	<scm>
		<connection>
			scm:svn:svn://localhost/osgira/trunk/project
		</connection>
		<developerConnection>
			scm:svn:svn://localhost/osgiara/trunk/project
		</developerConnection>
		<tag>HEAD</tag>
		<url>http://localhost:8001/osgira/browser/trunk
		</url>
	</scm>

	<!-- =================================================== -->
	<!-- Distribution management -->
	<!-- =================================================== -->

	<distributionManagement>
		<site>
			<id>net.camelpe.website</id>
			<url>https://dav.sample.com/sites/sample-project</url>
		</site>
		<repository>
			<id>com.obergner.localDistributionRepository
			</id>
			<name>My Very Own Local Distribution Repository</name>
			<url>file:/E:/Var/Data/Maven2/Repository/
			</url>
		</repository>
	</distributionManagement>

	<!-- =================================================== -->
	<!-- Project Dependencies -->
	<!-- =================================================== -->

	<dependencyManagement>
		<dependencies>
			<!-- =========================================== -->
			<!-- Application modules -->
			<!-- =========================================== -->
			<dependency>
				<groupId>net.camelpe</groupId>
				<artifactId>camelpe-api</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>net.camelpe</groupId>
				<artifactId>camelpe-extension</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>net.camelpe</groupId>
				<artifactId>camelpe-jboss</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>net.camelpe</groupId>
				<artifactId>camelpe-weld</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<!-- =========================================== -->
			<!-- Standard Javax APIs -->
			<!-- =========================================== -->
			<!-- JSR 330: @Inject etc -->
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>${deps.javax-inject.version}</version>
				<scope>provided</scope>
				<type>jar</type>
			</dependency>
			<!-- JSR 250 Annotations: @Resource etc -->
			<dependency>
				<groupId>javax.annotation</groupId>
				<artifactId>jsr250-api</artifactId>
				<version>${deps.jsr250-api.version}</version>
				<scope>provided</scope>
				<type>jar</type>
			</dependency>
			<!-- JSR 299/CDI etc -->
			<dependency>
				<groupId>javax.enterprise</groupId>
				<artifactId>cdi-api</artifactId>
				<version>${deps.cdi-api.version}</version>
				<scope>provided</scope>
				<type>jar</type>
			</dependency>
			<!-- Javax Interceptor API - TODO: Replace with standard javax.interceptor -->
			<dependency>
				<groupId>org.jboss.interceptor</groupId>
				<artifactId>jboss-interceptor-api</artifactId>
				<version>${deps.interceptor-api.version}</version>
				<scope>provided</scope>
				<type>jar</type>
			</dependency>
			<!-- Javax Transaction API -->
			<dependency>
				<groupId>javax.transaction</groupId>
				<artifactId>jta</artifactId>
				<version>${deps.jta.version}</version>
				<scope>provided</scope>
				<type>jar</type>
			</dependency>
			<!-- Javax JMS API -->
			<dependency>
				<groupId>javax.jms</groupId>
				<artifactId>jms</artifactId>
				<version>${deps.jms.version}</version>
				<scope>provided</scope>
				<type>jar</type>
			</dependency>
			<!-- Servlet API -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${deps.servlet-api.version}</version>
				<scope>provided</scope>
				<type>jar</type>
			</dependency>
			<!-- EJB 3.1 API - TODO: Replace with standard javax.ejb -->
			<dependency>
				<groupId>org.jboss.ejb3</groupId>
				<artifactId>jboss-ejb3-api</artifactId>
				<version>${deps.ejb-api.version}</version>
				<scope>provided</scope>
				<type>jar</type>
				<exclusions>
					<exclusion>
						<groupId>jbossws</groupId>
						<artifactId>jboss-jaxrpc</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.jboss.javaee</groupId>
						<artifactId>jboss-transaction-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>jboss.jbossws</groupId>
						<artifactId>jboss-jaxrpc</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- Bean Validation API -->
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${deps.validation-api.version}</version>
				<scope>provided</scope>
				<type>jar</type>
			</dependency>
			<!-- J2EE Management Specification -->
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-j2ee-management_1.1_spec</artifactId>
				<version>1.0.1</version>
				<scope>provided</scope>
				<type>jar</type>
			</dependency>
			<!-- Java Server Faces -->
			<dependency>
				<groupId>javax.faces</groupId>
				<artifactId>jsf-api</artifactId>
				<version>${deps.jsf-api.version}</version>
				<scope>provided</scope>
				<type>jar</type>
			</dependency>
			<!-- Expression Language -->
			<dependency>
				<groupId>javax.el</groupId>
				<artifactId>el-api</artifactId>
				<version>${deps.el-api.version}</version>
				<scope>provided</scope>
				<type>jar</type>
			</dependency>
			<!-- =========================================== -->
			<!-- Implementations of standard javax APIs -->
			<!-- =========================================== -->
			<!-- Hibernate Bean Validation Implementation -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${deps.hibernate-validator.version}</version>
				<scope>provided</scope>
				<type>jar</type>
				<exclusions>
					<!-- We want slf4j in 'provided' scope since it is one of the libraries 
						that are shared between different JEE modules in our final war. If we wouldn't 
						exclude it here, it would end up in scope 'runtime' and thus would be automatically 
						included in every JEE module we build, not only in the final ear. -->
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>javax.faces</groupId>
				<artifactId>jsf-impl</artifactId>
				<version>${deps.jsf-ri.version}</version>
				<scope>provided</scope>
				<type>jar</type>
			</dependency>
			<!-- =========================================== -->
			<!-- Proprietary -->
			<!-- =========================================== -->
			<!-- Apache -->
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.4</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${deps.log4j.version}</version>
				<type>jar</type>
				<exclusions>
					<exclusion>
						<groupId>javax.jms</groupId>
						<artifactId>jms</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.mail</groupId>
						<artifactId>mail</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.activation</groupId>
						<artifactId>activation</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jdmk</groupId>
						<artifactId>jmxtools</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jmx</groupId>
						<artifactId>jmxri</artifactId>
					</exclusion>
					<exclusion>
						<groupId>logkit</groupId>
						<artifactId>logkit</artifactId>
					</exclusion>
					<exclusion>
						<groupId>avalon-framework</groupId>
						<artifactId>avalon-framework</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.fusesource.commonman</groupId>
				<artifactId>commons-management</artifactId>
				<version>1.0</version>
				<type>jar</type>
			</dependency>
			<!-- Apache Camel -->
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-core</artifactId>
				<version>${deps.camel.version}</version>
				<type>jar</type>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.core</artifactId>
				<version>${deps.osgi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jms</artifactId>
				<version>${deps.camel.version}</version>
				<type>jar</type>
				<exclusions>
					<!-- We use the standard javax.jms-1.1 -->
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-jms_1.1_spec</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-spring</artifactId>
				<version>${deps.camel.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-test</artifactId>
				<version>${deps.camel.version}</version>
				<type>jar</type>
			</dependency>
			<!-- JBoss HornetQ -->
			<dependency>
				<groupId>org.hornetq</groupId>
				<artifactId>hornetq-core</artifactId>
				<version>${deps.hornetq.version}</version>
				<scope>provided</scope>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.hornetq</groupId>
				<artifactId>hornetq-core-client</artifactId>
				<version>${deps.hornetq.version}</version>
				<scope>provided</scope>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.jboss.netty</groupId>
				<artifactId>netty</artifactId>
				<version>${deps.netty.version}</version>
				<scope>provided</scope>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.hornetq</groupId>
				<artifactId>hornetq-jms-client</artifactId>
				<version>${deps.hornetq.version}</version>
				<scope>provided</scope>
				<type>jar</type>
			</dependency>
			<!-- Google -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${deps.google-guava.version}</version>
				<type>jar</type>
			</dependency>
			<!-- SLF4J -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${deps.slf4j.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${deps.slf4j.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${deps.slf4j.version}</version>
				<type>jar</type>
			</dependency>
			<!-- JBoss -->
			<dependency>
				<groupId>org.jboss</groupId>
				<artifactId>jboss-vfs</artifactId>
				<version>${deps.jboss-vfs.version}</version>
				<scope>provided</scope>
				<type>jar</type>
			</dependency>
			<!-- Spring -->
			<dependency>
				<groupId>aopalliance</groupId>
				<artifactId>aopalliance</artifactId>
				<version>1.0</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jms</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-asm</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${deps.spring.version}</version>
				<type>jar</type>
			</dependency>
			<!-- =========================================== -->
			<!-- Test dependencies -->
			<!-- =========================================== -->
			<!-- JUnit -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${deps.junit.version}</version>
				<scope>test</scope>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.jboss.weld</groupId>
				<artifactId>weld-core-bom</artifactId>
				<version>${deps.weld.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Arquillian: Test framework for CDI, Glassfish, JBoss -->
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-junit</artifactId>
				<version>${deps.arquillian.version}</version>
				<scope>test</scope>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.container</groupId>
				<artifactId>arquillian-weld-ee-embedded-1.1</artifactId>
				<version>${deps.arquillian.version}</version>
				<scope>test</scope>
				<type>jar</type>
				<exclusions>
					<!-- We don't use jdk14 logging. If we wouldn't exclude it here SLF4J 
						would keep complaining about finding two bindings - one for log4j and one 
						for jdk14 - when running test cases. -->
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-jdk14</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.container</groupId>
				<artifactId>arquillian-glassfish-embedded-3</artifactId>
				<version>${deps.arquillian.version}</version>
				<scope>test</scope>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.glassfish.extras</groupId>
				<artifactId>glassfish-embedded-all</artifactId>
				<version>${deps.glassfish-embedded-all.version}</version>
				<scope>test</scope>
				<type>jar</type>
			</dependency>
			<!-- Easymock -->
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>${deps.easymock.version}</version>
				<scope>test</scope>
				<type>jar</type>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- shared dependencies across modules -->
	<dependencies>
		<!-- =========================================== -->
		<!-- Provided -->
		<!-- =========================================== -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- =========================================== -->
		<!-- Compile -->
		<!-- =========================================== -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<!-- =========================================== -->
		<!-- Runtime -->
		<!-- =========================================== -->
		<!-- =========================================== -->
		<!-- Test -->
		<!-- =========================================== -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- =================================================== -->
	<!-- Project Plugins -->
	<!-- =================================================== -->

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${plugins.clean.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${plugins.resources.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${plugins.compiler.version}</version>
					<configuration>
						<source>${compiler.source}</source>
						<target>${compiler.target}</target>
						<verbose>${compiler.verbose}</verbose>
						<debug>${compiler.debug}</debug>
						<showWarnings>
							${compiler.showWarnings}
						</showWarnings>
						<showDeprecation>
							${compiler.showDeprecation}
						</showDeprecation>
					</configuration>
				</plugin>
				<plugin>
					<!-- | Because of a bug that sometimes causes wrong classpath ordering, 
						| we have to use a maven-surefire-plugin version >= 2.3.1. | See | SUREFIRE-61 -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${plugins.surefire.version}</version>
					<!-- Don't fork VM in order to be able to debug test cases -->
					<configuration>
						<!-- forkMode>never</forkMode -->
						<forkMode>perTest</forkMode>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>${plugins.cobertura.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>${plugins.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${plugins.jar.version}</version>
					<configuration>
						<archive>
							<index>true</index>
							<manifest>
								<addClasspath>true</addClasspath>
								<classpathPrefix>lib/</classpathPrefix>
								<addDefaultSpecificationEntries>true
								</addDefaultSpecificationEntries>
								<addDefaultImplementationEntries>true
								</addDefaultImplementationEntries>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${plugins.source.version}</version>
					<executions>
						<execution>
							<id>create-source-jar</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
						<execution>
							<id>create-test-source-jar</id>
							<phase>package</phase>
							<goals>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${plugins.dependency.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${plugins.install.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${plugins.deploy.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${plugins.build-helper.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<!-- =================================================== -->
	<!-- Project modules -->
	<!-- =================================================== -->

	<modules>
		<module>../camelpe-api</module>
		<module>../camelpe-extension</module>
		<module>../camelpe-jboss</module>
		<module>../camelpe-weld</module>
	</modules>

	<!-- =================================================== -->
	<!-- Project Reporting -->
	<!-- =================================================== -->

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.4.3</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<aggregate>true</aggregate>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<aggregate>true</aggregate>
					<targetJdk>${compiler.source}</targetJdk>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.0.1</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>dependencies</report>
							<report>project-team</report>
							<report>mailing-list</report>
							<report>cim</report>
							<!-- Issue tracking report will be omitted <report>issue-tracking</report> -->
							<report>license</report>
							<report>scm</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<!-- =================================================== -->
	<!-- Project Repositories -->
	<!-- =================================================== -->

	<repositories>
		<!-- The JBoss repository provides the EJB 3.0 API jar. -->
		<repository>
			<id>org.jboss.releaseRepository</id>
			<name>JBoss Releases Repository</name>
			<url>http://repository.jboss.org/nexus/content/groups/public-jboss
			</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<!-- This JBoss repository provides the latest Arquillian jars. -->
		<repository>
			<id>org.jboss.arquillianRepository</id>
			<name>JBoss Arquillian Repository</name>
			<url>https://repository.jboss.org/nexus/content/groups/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<!-- The following repository is needed to obtain the glassfish-embedded 
			container used in integration tests. -->
		<repository>
			<id>dev.java.net.glassfishRepository</id>
			<name>Java.net Glassfish Repository</name>
			<url>http://download.java.net/maven/glassfish</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>org.apache.snapshotsRepository</id>
			<name>Apache Snapshots Repository</name>
			<url>http://cvs.apache.org/maven-snapshot-repository
			</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

</project>
