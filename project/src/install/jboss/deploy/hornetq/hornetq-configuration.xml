
	<!--
		~ Copyright 2009 Red Hat, Inc. ~ Red Hat licenses this file to you
		under the Apache License, version ~ 2.0 (the "License"); you may not
		use this file except in compliance ~ with the License. You may obtain
		a copy of the License at ~ http://www.apache.org/licenses/LICENSE-2.0
		~ Unless required by applicable law or agreed to in writing, software
		~ distributed under the License is distributed on an "AS IS" BASIS, ~
		WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or ~
		implied. See the License for the specific language governing ~
		permissions and limitations under the License.
	-->

<configuration xmlns="urn:hornetq"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="urn:hornetq /schema/hornetq-configuration.xsd">

	<remoting-interceptors>
		<class-name><![CDATA[com.acme.orderplacement.appserver.hornetq.inflow.InflowingMessageInterceptor]]></class-name>
	</remoting-interceptors>

	<!--
		We need to create a core queue for the JMS topic explicitly because
		the bridge will be deployed before the JMS topic is deployed, so the
		first time, it otherwise won't find the queue/topic
	-->
	<queues>
		<queue name="jms.topic.ExternalEvents">
			<address>jms.topic.ExternalEvents</address>
		</queue>
	</queues>

	<bridges>
		<bridge name="orderplacement.ExternalEvents-ItemCreatedEvents-Bridge">
			<queue-name>jms.topic.ExternalEvents</queue-name>
			<forwarding-address>jms.queue.ItemCreatedEvents</forwarding-address>
			<filter string="EventType='urn:event-type:external.item.Created'" />
			<reconnect-attempts>-1</reconnect-attempts>
			<connector-ref connector-name="in-vm" />
		</bridge>
	</bridges>

</configuration>
